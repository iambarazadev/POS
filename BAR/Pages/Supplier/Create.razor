@page "/Suppliers/Create"
@page "/Suppliers/Edit/{Sn:int}"

@using Microsoft.EntityFrameworkCore
@inject IDbContextFactory<BarContext> MyFactory
@inject NavigationManager Navigation

<PageTitle>Supplier | Create Supplier</PageTitle>


<EditForm Model="ThisSupplier" OnValidSubmit="ProcessAndSave" autocomplete="off">
    <Options Title=@Title Icon=@Icon Url=@Url
        UrlCaption=@UrlCaption SubTitle=@SubTitle
        UrlCaptionIcon=@UrlCaptionIcon ShowSaveButton=@ShowSaveButton
        Funga=@Funga
    />
    <div class="row mt-0 text-unique bg-white" style="min-height:75vh !important;">
        <div class="col-12 col-md-3 text-start"></div>
        <div class="col-12 col-md-6 text-start">
            <DataAnnotationsValidator/>
            <div class="container py-md-5">
                <div class="form-floating mt-2 rounded-0">
                    <input @bind=@ThisSupplier.SupplierName type="text" class="form-control bg-xss border-0 text-unique fw-bolder rounded-0 text-capitalize" id="floatingInput" placeholder="Supplier Name (Caption / Short Description)">
                    <label for="floatingInput">
                        Supplier Name
                    </label>
                    <ValidationMessage For="() => ThisSupplier.SupplierName"/>
                </div>
                <div class="form-floating mt-2 rounded-0">
                    <input @bind=@ThisSupplier.SupplierTIN type="text" class="form-control bg-xss border-0 text-unique fw-bolder rounded-0 " id="floatingInput" placeholder="Supplier Name (Caption / Short Description)">
                    <label for="floatingInput">
                        TIN
                    </label>
                </div>
                <div class="form-floating mt-2 rounded-0">
                    <input @bind=@ThisSupplier.SupplierPhone type="text" class="form-control bg-xss border-0 text-unique fw-bolder rounded-0 " id="floatingInput" placeholder="Supplier Name (Caption / Short Description)">
                    <label for="floatingInput">
                        <i class="fs-6 bi-phone"></i> PHONE
                    </label>
                </div>
                <div class="form-floating mt-2 rounded-0">
                    <input @bind=@ThisSupplier.SupplierEmail type="email" class="form-control bg-xss border-0 text-unique fw-bolder rounded-0 " id="floatingInput" placeholder="Supplier Name (Caption / Short Description)">
                    <label for="floatingInput">
                        <i class="fs-6 bi-envelope"></i> EMAIL
                    </label>
                    <ValidationMessage For="() => ThisSupplier.SupplierEmail"/>
                </div>
                <div class="form-floating mt-2 rounded-0">
                    <input @bind=@ThisSupplier.SupplierAddress type="text" class="form-control bg-xss border-0 text-unique fw-bolder rounded-0 text-capitalize " id="floatingInput" placeholder="Supplier Name (Caption / Short Description)">
                    <label for="floatingInput">
                        <i class="fs-6 bi-geo-alt-fill"></i> Location
                    </label>
                    <ValidationMessage For="() => ThisSupplier.SupplierAddress"/>
                </div>
                <div class="form-floating mt-2">
                    <textarea @bind=@ThisSupplier.SupplierDescription class="form-control rounded-0 border-0 bg-xss fw-bolder text-unique text-capitalize" placeholder="Leave a comment here" id="floatingTextarea2" style="height: 80px"></textarea>
                    <label for="floatingTextarea2">Description, & more ..</label>
                    <ValidationMessage For="() => ThisSupplier.SupplierDescription"/>
                </div>
            </div>
        </div>
        <div class="col-12 col-md-3 text-start">
           
        </div>
    </div>
</EditForm>

@code{
    
    // Public Parameter
    [Parameter]
    public int Sn{get;set;}
    
    // Component Variables
    public string Title = "Suppliers";
    public string SubTitle = "Create New";
    public string Icon = "stack";
    public string Url = "Suppliers/Detail/0";
    public string UrlCaption = "Detail View";
    public string UrlCaptionIcon = "ui-checks-grid";
    public bool ShowSaveButton = true;
    public string Funga = "d-none";
    
    //Data
    private Supplier ThisSupplier = new();
    private int LinkedIn = 0;
    
    protected override async Task OnInitializedAsync(){
        await base.OnInitializedAsync();
        await Start(Sn);
    }
    
    private async Task Start(int TheKey){
        
        if(TheKey <= 0){
            ThisSupplier = new();
        }
        else{
            using(var repo = new UnitOfWork(MyFactory.CreateDbContext())){
                ThisSupplier = await repo.Suppliers.GetDetailedSupplierAsync(TheKey);
                
                await repo.CompleteAsync();
                repo.Dispose();
            }
            SubTitle = "Update Supplier" ;
        }
    }
    
    private async Task ProcessAndSave(){
        if(ThisSupplier != null){
            using(var repo = new UnitOfWork(MyFactory.CreateDbContext())){
                if(ThisSupplier.SupplierId > 0){
                    
                    repo.Suppliers.Update(ThisSupplier);
                    await repo.CompleteAsync();
                    LinkedIn = ThisSupplier.SupplierId;
                    repo.Dispose();
                    Navigation.NavigateTo("Suppliers/Detail/" + LinkedIn);
                }
                else{
                    
                    ThisSupplier.SupplierId = default;
                    ThisSupplier.SupplierCode = "SUP";
                    ThisSupplier.SupplierDateCreated = DateTime.Now;
                    ThisSupplier.UserId = 1;
                    await repo.Suppliers.AddAsync(ThisSupplier);
                    await repo.CompleteAsync();
                    repo.Dispose();
                }
            }
            
            ThisSupplier = new(); 
            StateHasChanged();
        }
    }
}